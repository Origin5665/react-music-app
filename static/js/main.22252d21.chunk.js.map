{"version":3,"sources":["components/Song.jsx","components/Library.jsx","utils.js","components/PlayControl.jsx","components/Player.jsx","components/Cover.jsx","components/Navigate.jsx","App.js","index.js"],"names":["Song","React","memo","setSongs","songs","isPlaying","setCurrentSong","audioStream","dataSong","selectedSong","a","selected","filter","song","id","current","play","newSongs","map","active","onClick","e","className","classNames","alt","src","image","title","author","Library","isPushed","setIsPlaying","songList","item","classnames","getTime","time","sec_num","parseInt","Math","floor","v","i","join","PlayControl","skipTrackHandler","handlerPause","handlerPlay","console","log","icon","faAngleLeft","size","faPause","faPlay","faAngleRight","Player","currentSong","setSongInfo","songInfo","useEffect","trackAnimate","transform","animatingPercent","trackBackground","background","color","handlerInput","useCallback","currentTime","target","value","activeLibrarySongHandler","nextSong","direction","songIndex","findIndex","length","duration","style","step","onChange","min","max","type","pause","Cover","isPaused","Navigate","setIsPushed","handlerToggle","faMusic","App","useState","audio","uuid","animatinPercent","useRef","handlerTime","roundedCurrent","round","roundedDuration","roundedPercent","songEndHandler","onEnded","preload","onLoadedMetadata","onTimeUpdate","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22252d21.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst Song = React.memo(({ setSongs, songs, isPlaying, setCurrentSong, audioStream, dataSong }) => {\r\n\r\n   const selectedSong = async () => {\r\n      const selected = songs.filter(song => song.id === dataSong.id);\r\n      await setCurrentSong(selected[0]);\r\n      if (isPlaying) audioStream.current.play();\r\n\r\n      const newSongs = songs.map(song => {\r\n         if (song.id === dataSong.id) {\r\n            return { ...song, active: true }\r\n         } else {\r\n            return { ...song, active: false }\r\n         }\r\n      })\r\n      setSongs(newSongs)\r\n   };\r\n\r\n   return (\r\n      <li onClick={(e) => selectedSong(e)} className={classNames(\"song\", dataSong.active && \"song_active\")}>\r\n         <img className=\"song__image\" alt={'Обложка альбома'} src={dataSong.image} />\r\n         <div>\r\n            <h3 className=\"song__title\">{dataSong.title}</h3>\r\n            <p className=\"song__author\">{dataSong.author}</p>\r\n         </div>\r\n      </li>\r\n   );\r\n});\r\n\r\nexport default Song;\r\n","import React from 'react'\r\nimport Song from './Song.jsx'\r\nimport classnames from 'classnames';\r\nconst Library = React.memo(({ songs, isPushed, setSongs, isPlaying, setIsPlaying, setCurrentSong, audioStream }) => {\r\n\r\n   const songList = songs.map(item =>\r\n      <Song\r\n         isPlaying={isPlaying}\r\n         setIsPlaying={setIsPlaying}\r\n         setSongs={setSongs}\r\n         audioStream={audioStream}\r\n         songs={songs}\r\n         setCurrentSong={setCurrentSong}\r\n         key={item.id}\r\n         dataSong={item}\r\n      />);\r\n\r\n   return (\r\n      <div className={classnames(\"library\", isPushed && \"library_active\")}>\r\n         <h2 className=\"library__title\">Все песни</h2>\r\n         <ul className=\"library__list\">\r\n            {songList}\r\n         </ul>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default Library;\r\n","import uuid from 'react-uuid';\r\n// Get track time:\r\nexport const getTime = (time) => {\r\n   let sec_num = parseInt(time, 10)\r\n   let hours = Math.floor(sec_num / 3600) % 24\r\n   let minutes = Math.floor(sec_num / 60) % 60\r\n   let seconds = sec_num % 60\r\n   return [hours, minutes, seconds]\r\n      .map(v => v < 10 ? \"0\" + v : v)\r\n      .filter((v, i) => v !== \"00\" || i > 0)\r\n      .join(\":\")\r\n}\r\n\r\nexport const playSkipSong = async (state, audio) => {\r\n   if (state) {\r\n      try {\r\n         const promise = await audio.current.play()\r\n         audio.current.play()\r\n      } catch (er) {\r\n         console.log(er);\r\n      }\r\n   };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Database:\r\n\r\nexport const chilhop = () => {\r\n   return [\r\n      {\r\n         title: \"Slim Bobby\",\r\n         author: \"Aviino\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=10454\",\r\n         color: [\"#b48484\", \"#506fc2\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Going Back\",\r\n         author: \"Swørn\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/10/737bb830d34592344eb4a2a1d2c006cdbfc811d9-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\",\r\n         color: [\"#b48484\", \"#61708c\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Serendipity\",\r\n         author: \"Philanthrope, The Field Tapes\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=10251\",\r\n         color: [\"#b48484\", \"#b35935\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Imagination\",\r\n         author: \"Montell Fish\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/24bd0da848d9718fd19af104ff5c0b11f914cb25-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=9332\",\r\n         color: [\"#b48484\", \"#8e5360\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Paraglider\",\r\n         author: \"Kendall Miles, H E R B\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/4fac6bb3a32f9e76b465990ba8d97d7db8a372f5-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=9318\",\r\n         color: [\"#b48484\", \"#af5332\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Tumbling\",\r\n         author: \"Swørn\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=9225\",\r\n         color: [\"#b48484\", \"#8b3965\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Toft\",\r\n         author: \"Felty, Ezzy\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=9312\",\r\n         color: [\"#edd9404\", \"#185e92\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Cruisin'\",\r\n         author: \"Cloudchord, G Mills\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/8404541e3b694d16fd79433b142ed910f36764dd-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=8200\",\r\n         color: [\"#00585c\", \"#715653\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Slowdrive\",\r\n         author: \"Aviino\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/aa103b43660077c66e65a1edc009844171bbd9c6-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=9484\",\r\n         color: [\"#51688c\", \"#cf9cba\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n      {\r\n         title: \"Onteora Lake\",\r\n         author: \"Stan Forebee, Kyle McEvoy\",\r\n         image: \"https://chillhop.com/wp-content/uploads/2020/07/38147ead546d4fcc613080507497fe5502a5a241-1024x1024.jpg\",\r\n         audio: \"https://mp3.chillhop.com/serve.php/?mp3=8787\",\r\n         color: [\"#ffd6ba\", \"#118084\"],\r\n         id: uuid(),\r\n         active: false\r\n      },\r\n\r\n   ]\r\n}\r\n\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst PlayControl = React.memo(({ skipTrackHandler, handlerPause, handlerPlay, isPlaying }) => {\r\n   console.log(\"render\");\r\n   return (\r\n      <div className=\"playControl\">\r\n         <button onClick={() => skipTrackHandler('back')}><FontAwesomeIcon icon={faAngleLeft} size={\"3x\"} className={\"playControll__skipBack\"} /></button>\r\n         {!isPlaying\r\n            ? <button onClick={handlerPlay}><FontAwesomeIcon icon={faPlay} size={\"3x\"} className={\"playControll__play\"} /></button>\r\n            : <button onClick={handlerPause}><FontAwesomeIcon icon={faPause} size={\"3x\"} className={\"playControll__play\"} /></button>}\r\n         <button onClick={() => skipTrackHandler('forward')}><FontAwesomeIcon icon={faAngleRight} size={\"3x\"} className={\"playControll__skipForward\"} /></button>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default PlayControl;\r\n","import React from 'react';\r\nimport { getTime } from '../utils';\r\nimport PlayControl from './PlayControl';\r\n\r\nconst Player = React.memo(({\r\n   songs,\r\n   setSongs,\r\n   currentSong,\r\n   setCurrentSong,\r\n   setIsPlaying,\r\n   isPlaying,\r\n   audioStream,\r\n   setSongInfo,\r\n   songInfo,\r\n}) => {\r\n\r\n   React.useEffect(() => {\r\n      const newSongs = songs.map(song => {\r\n         if (song.id === currentSong.id) {\r\n            return { ...song, active: true }\r\n         } else {\r\n            return { ...song, active: false }\r\n         }\r\n      })\r\n      setSongs(newSongs)\r\n   }, [currentSong])\r\n\r\n   const trackAnimate = {\r\n      transform: `translateX(${songInfo.animatingPercent}%)`,\r\n\r\n   }\r\n   const trackBackground = {\r\n      background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\r\n   }\r\n\r\n\r\n   /* Воспроизвести */\r\n   const handlerPlay = () => {\r\n      audioStream.current.play();\r\n      setIsPlaying(true)\r\n   };\r\n\r\n   /* Пауза */\r\n   const handlerPause = () => {\r\n      audioStream.current.pause()\r\n      setIsPlaying(false)\r\n   };\r\n\r\n   /* Перемотка времени */\r\n   const handlerInput = React.useCallback(e => {\r\n      audioStream.current.currentTime = e.target.value\r\n      setSongInfo({\r\n         ...songInfo, currentTime: e.target.value\r\n      })\r\n   }, [audioStream, setSongInfo, songInfo])\r\n   /* Установка активной песни в библиотеке */\r\n   const activeLibrarySongHandler = nextSong => {\r\n      const newSongs = songs.map(song => {\r\n         if (song.id === nextSong.id) return { ...song, active: true }\r\n         return { ...song, active: false }\r\n      });\r\n      setSongs(newSongs);\r\n   };\r\n\r\n   /* Переключить трек */\r\n   const skipTrackHandler = async (direction) => {\r\n\r\n      let songIndex = songs.findIndex(song => song.id === currentSong.id);\r\n      /* Для перехода в начало списка используем остаток\r\n         индекса от длинны массива с треками */\r\n      if (direction === 'forward') {\r\n         await setCurrentSong(songs[(songIndex + 1) % songs.length]);\r\n         activeLibrarySongHandler(songs[(songIndex + 1) % songs.length]);\r\n      }\r\n      /* Если длинна SongIndex меньше нуля, \r\n         Переключаем текущий трек на последний */\r\n      if (direction === 'back') {\r\n\r\n         if ((songIndex - 1) % songs.length === -1) {\r\n            await setCurrentSong(songs[songs.length - 1]);\r\n            activeLibrarySongHandler(songs[songs.length - 1]);\r\n            return isPlaying && audioStream.current.play();\r\n\r\n         }\r\n         await setCurrentSong(songs[(songIndex - 1) % songs.length]);\r\n         activeLibrarySongHandler(songs[songs.length - 1]);\r\n      }\r\n      isPlaying && audioStream.current.play();\r\n   };\r\n\r\n\r\n   return (\r\n      <div className=\"player__wrapper\">\r\n         <div className=\"timeControll\">\r\n            <p>{songInfo.duration ? getTime(songInfo.currentTime) : \"--:--\"}</p>\r\n            <div style={trackBackground} className=\"timeControll__track\">\r\n               <input\r\n                  value={songInfo.currentTime}\r\n                  step=\"1\"\r\n                  onChange={e => handlerInput(e)}\r\n                  min={0}\r\n                  max={songInfo.duration || 100}\r\n                  className=\"timeControll__input\"\r\n                  type=\"range\"\r\n               />\r\n               <div style={trackAnimate} className=\"timeControll__animate-track\"></div>\r\n            </div>\r\n            <p>{songInfo.duration ? getTime(songInfo.duration) : \"--:--\"}</p>\r\n         </div>\r\n         <PlayControl isPlaying={isPlaying} skipTrackHandler={skipTrackHandler} handlerPause={handlerPause} handlerPlay={handlerPlay} />\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default Player;\r\n","import React from 'react'\r\nimport classnames from 'classnames';\r\nconst Cover = React.memo(({ currentSong, isPlaying, isPaused }) => {\r\n\r\n   const { image, title, author } = currentSong\r\n\r\n   return (\r\n      <div className=\"cover\">\r\n         <img className={classnames(\"cover__image\")}\r\n            src={image}\r\n            alt=\"Обложка альбома\" />\r\n         <h2 className=\"cover__title\">{title}</h2>\r\n         <h3 className=\"cover__artist\">{author}</h3>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default Cover;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport classnames from 'classnames';\r\n\r\nconst Navigate = React.memo(({ isPushed, setIsPushed }) => {\r\n\r\n   const handlerToggle = React.useCallback(() => {\r\n      setIsPushed(!isPushed)\r\n   }, [setIsPushed, isPushed])\r\n\r\n\r\n\r\n   return (\r\n      <nav className=\"navigate\">\r\n         <h1 className=\"navigate__title\">Chillhop club</h1>\r\n         <button onClick={handlerToggle} className={classnames(\"navigate__button\", isPushed && \"navigate__button_active\")}>\r\n            Песни\r\n            <FontAwesomeIcon icon={faMusic} />\r\n         </button>\r\n      </nav>\r\n   )\r\n});\r\n\r\nexport default Navigate\r\n","import React from 'react';\r\nimport Library from './components/Library';\r\nimport Player from './components/Player';\r\nimport Cover from './components/Cover';\r\nimport './scss/main.scss';\r\nimport { chilhop } from './utils';\r\nimport Navigate from './components/Navigate';\r\n\r\nconst App = React.memo(() => {\r\n\r\n  const [isPushed, setIsPushed] = React.useState(false);\r\n  const [isPlaying, setIsPlaying] = React.useState(false);\r\n  const [songs, setSongs] = React.useState(chilhop());\r\n  const [currentSong, setCurrentSong] = React.useState(songs[0]);\r\n  const [songInfo, setSongInfo] = React.useState({ currentTime: 0, duration: 0, animatinPercent: 0 });\r\n\r\n  const audioStream = React.useRef(null);\r\n\r\n  /* Устанавливает время, продолжительность и прогресс воспроизведения */\r\n  const handlerTime = React.useCallback((e) => {\r\n    const currentTime = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundedCurrent = Math.round(currentTime)\r\n    const roundedDuration = Math.round(duration)\r\n    const roundedPercent = Math.round((roundedCurrent / roundedDuration) * 100)\r\n\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime,\r\n      duration,\r\n      animatingPercent: roundedPercent\r\n    });\r\n  }, [songInfo])\r\n  /* Воспроизводит следующий трек */\r\n  const songEndHandler = async () => {\r\n    let songIndex = songs.findIndex(song => song.id === currentSong.id)\r\n    await setCurrentSong(songs[(songIndex + 1) % songs.length])\r\n    if (isPlaying) audioStream.current.play()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"app\" >\r\n      <Navigate\r\n        isPushed={isPushed}\r\n        setIsPushed={setIsPushed} />\r\n      <Cover\r\n        isPlaying={isPlaying}\r\n        currentSong={currentSong} />\r\n      <Player\r\n        setSongs={setSongs}\r\n        currentSong={currentSong}\r\n        setCurrentSong={setCurrentSong}\r\n        songs={songs}\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        audioStream={audioStream}\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying} />\r\n      <Library\r\n        isPushed={isPushed}\r\n        setSongs={setSongs}\r\n        audioStream={audioStream}\r\n        setIsPlaying={setIsPlaying}\r\n        isPlaying={isPlaying}\r\n        setCurrentSong={setCurrentSong}\r\n        songs={songs} />\r\n      {/* AUDIO */}\r\n      <audio\r\n        onEnded={songEndHandler}\r\n        preload={'true'}\r\n        onLoadedMetadata={handlerTime}\r\n        onTimeUpdate={handlerTime}\r\n        ref={audioStream}\r\n        src={currentSong.audio} />\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}